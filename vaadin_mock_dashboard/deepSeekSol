import org.yaml.snakeyaml.DumperOptions;
import org.yaml.snakeyaml.Yaml;
import org.yaml.snakeyaml.constructor.Constructor;
import org.yaml.snakeyaml.representer.Representer;

import java.io.*;
import java.util.*;

public class YamlSchemaUpdater {
    
    public static void main(String[] args) {
        String yamlFilePath = "path/to/your/config.yaml";
        
        try {
            // Add new schema fields
            Map<String, String> newFields = new LinkedHashMap<>();
            newFields.put("NEW_FIELD_1", "string");
            newFields.put("NEW_FIELD_2", "integer");
            newFields.put("NEW_FIELD_3", "timestamp");
            
            // Update the YAML file
            updateYamlSchema(yamlFilePath, newFields);
            
            System.out.println("YAML schema updated successfully!");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void updateYamlSchema(String filePath, Map<String, String> newFields) throws IOException {
        // Configure YAML options for pretty printing
        DumperOptions options = new DumperOptions();
        options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);
        options.setPrettyFlow(true);
        options.setIndent(2);
        
        Yaml yaml = new Yaml(new Constructor(), new Representer(), options);
        
        // Read the existing YAML file
        Map<String, Object> yamlData;
        try (FileInputStream inputStream = new FileInputStream(filePath)) {
            yamlData = yaml.load(inputStream);
        }
        
        // Navigate to the csv -> schema section
        @SuppressWarnings("unchecked")
        Map<String, Object> csvSection = (Map<String, Object>) yamlData.get("csv");
        
        if (csvSection != null) {
            @SuppressWarnings("unchecked")
            Map<String, String> schemaSection = (Map<String, String>) csvSection.get("schema");
            
            if (schemaSection != null) {
                // Add new fields to the schema
                schemaSection.putAll(newFields);
            } else {
                // Create schema section if it doesn't exist
                csvSection.put("schema", new LinkedHashMap<>(newFields));
            }
        } else {
            // Create csv section if it doesn't exist
            Map<String, Object> newCsvSection = new LinkedHashMap<>();
            newCsvSection.put("schema", new LinkedHashMap<>(newFields));
            yamlData.put("csv", newCsvSection);
        }
        
        // Write the updated YAML back to file
        try (FileWriter writer = new FileWriter(filePath)) {
            yaml.dump(yamlData, writer);
        }
    }
    
    // Alternative method to add individual fields
    public static void addSchemaField(String filePath, String fieldName, String fieldType) throws IOException {
        Map<String, String> singleField = new LinkedHashMap<>();
        singleField.put(fieldName, fieldType);
        updateYamlSchema(filePath, singleField);
    }
}
